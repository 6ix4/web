@import "~typeface-roboto";
@import "~typeface-nanum-square";
@import "~typeface-nanum-barun-gothic";
@import "~typeface-spoqa-han-sans2";

@scrollbar-color: #303030;
@scrollbar-foreground: #00C0A0;
@title-font: 'Roboto', 'Nanum Square', sans-serif;

::selection {
	color: #fff;
	background: #00C0A0;
}

::-webkit-scrollbar {
	width: 16px;
	height: 16px;
}

::-webkit-scrollbar-button {
	width: 0px;
	height: 0px;
}

::-webkit-scrollbar-thumb {
	background: @scrollbar-foreground;
	border: none;
	border-radius: 0px;
}

::-webkit-scrollbar-thumb:hover {
	background: lighten(@scrollbar-foreground, 10%);
}

::-webkit-scrollbar-thumb:active {
	background: lighten(@scrollbar-foreground, 5%);
}

::-webkit-scrollbar-track {
	background: @scrollbar-color;
	border: none;
	border-radius: 0px;
}

::-webkit-scrollbar-track:active {
	background: darken(@scrollbar-color, 10%);
}

::-webkit-scrollbar-corner {
	background: @scrollbar-color;
}


* {
	scrollbar-arrow-color: @scrollbar-foreground;
	scrollbar-base-color: @scrollbar-color;
	scrollbar-track-color: @scrollbar-color;
	scrollbar-face-color: @scrollbar-foreground;
	scrollbar-highlight-color: @scrollbar-color;
	scrollbar-3dlight-color: @scrollbar-color;
	scrollbar-darkshadow-color: @scrollbar-color;
	scrollbar-shadow-color: @scrollbar-foreground;

	font-family: 'Roboto', 'Nanum Barun Gothic', sans-serif;
}

main {
	background: #fff;
}

.animated(@duration) {
	transition: all @duration ease;
}

.fixed-centered {
	top: 50%;
	left: 50%;
	transform: translate(-50%, -50%);
}

.flex-centered {
	align-items: center;
	justify-content: center;
}

.text-centered {
	text-align: center;
}

.show-on-mobile-down {
	display: none;
}

@media only screen and (max-width: 768px) {
	.show-on-mobile-down {
		display: flex;
	}

	.hide-on-mobile-down {
		display: none;
	}
}

@keyframes whiteout {
	100% {
		background-color: #00c0a0;
	}
}

@keyframes fadein {
	100% {
		opacity: 1;
	}
}

@keyframes up {
	100% {
		top: 0;
	}
}

@keyframes wave-front {
	100% {
		transform: translate(-50%, -100%);
	}
}

@keyframes wave-back {
	100% {
		transform: translate(50%, -100%);
	}
}

@keyframes view-in {
	100% {
		left: 0;
	}
}

@keyframes disappear {
	100% {
		display: none !important;
	}
}

// ............................................................
// .for

.for(@i, @n) {.-each(@i)}
.for(@n)     when (isnumber(@n)) {.for(1, @n)}
.for(@i, @n) when not (@i = @n)  {
	.for((@i + (@n - @i) / abs(@n - @i)), @n);
}

// ............................................................
// .for-each

.for(@array)   when (default()) {.for-impl_(length(@array))}
.for-impl_(@i) when (@i > 1)    {.for-impl_((@i - 1))}
.for-impl_(@i) when (@i > 0)    {.-each(extract(@array, @i))}
